"use strict";const e=e=>"function"==typeof e,t=(t,r="")=>{if(!e(t))throw new TypeError(`${r} Expecting function arg`.trim())},r=t=>e(t.subscribe),n=(r=void 0,n=null)=>{const s=t=>e(n?.persist)&&n.persist(t);let i=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),r=(e,r)=>{if("function"!=typeof r)throw new TypeError("Expecting callback function as second argument");return t(e).add(r),()=>t(e).delete(r)};return{publish:(e,r)=>{t(e).forEach((e=>e(r)))},subscribe:r,subscribeOnce:(e,t)=>{const n=r(e,(e=>{t(e),n()}));return n},unsubscribeAll:t=>e.delete(t)}})(),c=r;s(c);const o=()=>c,u=e=>{c!==e&&(c=e,s(c),i.publish("change",c))};return{set:u,get:o,update:e=>{t(e,"[update]"),u(e(o()))},subscribe:e=>(t(e,"[subscribe]"),e(c),i.subscribe("change",e))}},s=e=>"object"==typeof e&&!Array.isArray(e)&&null!==e;exports.createSelectionStore=(i,c=[],o=!1)=>{const u=e=>{if(!Array.isArray(e)||!e.every(s))throw new TypeError("Expecting array of initial item objects");return e};if(!Array.isArray(c)||!c.every((e=>!isNaN(e)&&void 0!==i[e])))throw new TypeError("Expecting array of initial selected indexes");const a=n(u(i)),p=n(c),b=e=>[...new Set(e)],l=((s,i,c=null)=>{const o=t=>e(c?.persist)&&c.persist(t),u=n(c?.initialValue),a=[];if(s.forEach((e=>{if(!r(e))throw new TypeError("Expecting array of StoreLike objects");e.subscribe((e=>a.push(e)))()})),!e(i))throw new TypeError("Expecting second argument to be the derivative function");if(!i.length||i.length>2)throw new TypeError("Expecting the derivative function to have exactly 1 or 2 arguments");let p=0,b=[];return{get:u.get,subscribe:e=>{t(e,"[derived.subscribe]"),p++||s.forEach(((e,t)=>{b.push(e.subscribe((e=>{a[t]=e,1===i.length?(u.set(i(a)),o(u.get())):i(a,(e=>{u.set(e),o(u.get())}))})))}));const r=u.subscribe(e);return()=>{--p||(b.forEach((e=>e())),b=[]),r()}}}})([a,p],(([e,t])=>({items:e,selected:t,selection:t.map((t=>e[t]))}))),f=e=>{if("number"!=typeof e)throw new TypeError("Expecting numeric index");const t=a.get();return t.length&&void 0!==t[e]?[e]:[]},d=(e,t)=>{if(!e.length)return t?p.set([]):void 0;if(!o)return((e,t)=>{const r=f(e);p.update((e=>!o||t?r:b([...e,...r])))})(e[e.length-1],t);const r=e.reduce(((e,t)=>[...e,...f(t)]),[]);p.update((e=>b(t?r:[...e,...r])))},g={subscribe:l.subscribe,get:l.get,select:(e,t=!0)=>{let r=Array.isArray(e)?e:[e];t&&p.set([]);let n=[];return r.forEach((e=>{"number"!=typeof e&&(e=a.get().findIndex((t=>t===e))),e>=0&&n.push(e)})),d(n,!1),g},unselect:e=>{if(void 0===e)return p.set([]),g;const t=p.get();if(!t.length)return g;let r=Array.isArray(e)?e:[e],n=t.reduce(((e,t)=>({...e,[t]:!0})),{});return r.forEach((e=>{"number"!=typeof e&&(e=a.get().findIndex((t=>t===e))),delete n[e]})),d(Object.keys(n).map((e=>parseInt(e))),!0),g},findIndexBy:(e,t)=>((e,t,r)=>r.findIndex((r=>r&&void 0!==r[e]&&r[e]===t)))(e,t,a.get()),reset:(e=[])=>(p.set([]),a.set(u(e||[])),g)};return g};
