const e=e=>"function"==typeof e,r=(r,t="")=>{if(!e(r))throw new TypeError(`${t} Expecting function arg`.trim())},t=r=>e(r.subscribe),n=(t=void 0,n=null)=>{const s=r=>e(n?.persist)&&n.persist(r);let i=(()=>{const e=new Map,r=r=>(e.has(r)||e.set(r,new Set),e.get(r)),t=(e,t)=>{if("function"!=typeof t)throw new TypeError("Expecting callback function as second argument");return r(e).add(t),()=>r(e).delete(t)};return{publish:(e,t={})=>{r(e).forEach((e=>e(t)))},subscribe:t,subscribeOnce:(e,r)=>{const n=t(e,(e=>{r(e),n()}));return n},unsubscribeAll:r=>e.delete(r)}})(),o=t;s(o);const c=()=>o,u=e=>{o!==e&&(o=e,s(o),i.publish("change",o))};return{set:u,get:c,update:e=>{r(e,"[update]"),u(e(c()))},subscribe:e=>(r(e,"[subscribe]"),e(o),i.subscribe("change",e))}},s=e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,i=(i,o=[],c=!1)=>{const u=e=>{if(!Array.isArray(e)||!e.every(s))throw new TypeError("Expecting array of initial item objects");return e};if(!Array.isArray(o)||!o.every((e=>!isNaN(e)&&void 0!==i[e])))throw new TypeError("Expecting array of initial selected indexes");const a=n(u(i)),b=n(o),p=e=>[...new Set(e)],l=((s,i,o=null)=>{const c=r=>e(o?.persist)&&o.persist(r),u=n(o?.initialValue),a=[];if(s.forEach((e=>{if(!t(e))throw new TypeError("Expecting array of StoreLike objects");e.subscribe((e=>a.push(e)))()})),!e(i))throw new TypeError("Expecting second argument to be the derivative function");if(!i.length||i.length>2)throw new TypeError("Expecting the derivative function to have exactly 1 or 2 arguments");let b=0,p=[];return{get:u.get,subscribe:e=>{r(e,"[derived.subscribe]"),b++||s.forEach(((e,r)=>{p.push(e.subscribe((e=>{a[r]=e,1===i.length?(u.set(i(a)),c(u.get())):i(a,(e=>{u.set(e),c(u.get())}))})))}));const t=u.subscribe(e);return()=>{--b||(p.forEach((e=>e())),p=[]),t()}}}})([a,b],(([e,r])=>({items:e,selected:r,selection:r.map((r=>e[r]))}))),f=e=>{if("number"!=typeof e)throw new TypeError("Expecting numeric index");const r=a.get();return r.length&&void 0!==r[e]?[e]:[]},g=(e,r)=>{if(!e.length)return r?b.set([]):void 0;if(!c)return((e,r)=>{const t=f(e);b.update((e=>!c||r?t:p([...e,...t])))})(e[e.length-1],r);const t=e.reduce(((e,r)=>[...e,...f(r)]),[]);b.update((e=>p(r?t:[...e,...t])))},d={subscribe:l.subscribe,get:l.get,select:(e,r=!0)=>{let t=Array.isArray(e)?e:[e];r&&b.set([]);let n=[];return t.forEach((e=>{"number"!=typeof e&&(e=a.get().findIndex((r=>r===e))),e>=0&&n.push(e)})),g(n,!1),d},findIndexBy:(e,r)=>((e,r,t)=>t.findIndex((t=>t&&void 0!==t[e]&&t[e]===r)))(e,r,a.get()),reset:(e=[])=>(b.set([]),a.set(u(e||[])),d)};return d};export{i as createSelectionStore};
